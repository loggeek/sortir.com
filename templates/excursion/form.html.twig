{% extends 'base.html.twig' %}

{% block title %}Création d'une sorite{% endblock %}
{% block body %}

    <h2 class="text-center">Créer une sortie</h2>

    {{ form_start(excursionForm) }}

    <div class="d-flex justify-content-center flex-row m-3">
        <div class="flex-grow-1 me-3">
            {{ form_label(excursionForm.name) }}
            {{ form_widget(excursionForm.name) }}
            {{ form_errors(excursionForm.name) }}

            {{ form_label(excursionForm.date) }}
            {{ form_widget(excursionForm.date) }}
            {{ form_errors(excursionForm.date) }}

            {{ form_label(excursionForm.deadline) }}
            {{ form_widget(excursionForm.deadline) }}
            {{ form_errors(excursionForm.deadline) }}

            {{ form_label(excursionForm.nb_seats) }}
            {{ form_widget(excursionForm.nb_seats) }}
            {{ form_errors(excursionForm.nb_seats) }}

            {{ form_label(excursionForm.duration) }}
            {{ form_widget(excursionForm.duration) }}
            {{ form_errors(excursionForm.duration) }}

            {{ form_label(excursionForm.description) }}
            {{ form_widget(excursionForm.description) }}
            {{ form_errors(excursionForm.description) }}
        </div>

        <div class="flex-grow-1 me-3">
            {{ form_label(excursionForm.campus) }}
            {{ form_widget(excursionForm.campus) }}
            {{ form_errors(excursionForm.campus) }}

            <label for="town">Ville</label>
            <select id="town" name="town" class="form-select">
                <option>-- Selectionner une vile --</option>
                {% for town in towns %}
                    <option value = {{ town.id }}>{{ town.name }}</option>
                {% endfor %}
            </select>

            {{ form_label(excursionForm.location) }}
            {{ form_widget(excursionForm.location) }}
            {{ form_errors(excursionForm.location) }}

            <label for="street">Rue</label>
            <input id="street" value="" class="form-control" disabled="disabled" style="background-color: white">

            <label for="cp">Code Postal</label>
            <input id="cp" value="" class="form-control" disabled="disabled" style="background-color: white">

            <label for="latitude">Latitude</label>
            <input id="latitude" value="" class="form-control" disabled="disabled" style="background-color: white">

            <label for="longitude">Longitude</label>
            <input id="longitude" value="" class="form-control" disabled="disabled" style="background-color: white">

        </div>
    </div>

    <div class="d-flex justify-content-center">
        <button type="submit" name="submit" value="create" class="btn btn-primary m-2">Enregistrer</button>
        <button type="submit" name="submit" value="publish" class="btn btn-primary m-2">Publier la sortie</button>
        <a href="{{ path('app_home') }}" class="btn btn-primary m-2">Annuler</a>
    </div>

    {{ form_end(excursionForm) }}

    <script>

        document.addEventListener('DOMContentLoaded', function() {

            let locationsContainer = document.getElementById('excursion_location');
            locationsContainer.disabled = true;

            let villeSelector = document.getElementById('town');

            if (villeSelector) {
                villeSelector.addEventListener('change', function() {
                    let selectedTown = villeSelector.options[villeSelector.selectedIndex].value;

                    if (selectedTown) {
                        fetch(`/api/locations/${selectedTown}`)
                            .then(response => {
                                if (!response.ok) {
                                    locationsContainer.disabled = true;
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                displayLocations(data);
                            })
                            .catch(error => {
                                console.error('There was a problem with the fetch operation:', error);
                            });
                    }
                });
            }

            function displayLocations(locations) {
                let locationsContainer = document.getElementById('excursion_location');

                locationsContainer.innerHTML = ''; // Réinitialiser le contenu

                let defaultOption = document.createElement('option');
                defaultOption.textContent = '-- Sélectionner un lieu --';
                defaultOption.value = '';
                locationsContainer.appendChild(defaultOption);

                if (locations.length > 0) {
                    locationsContainer.disabled = false;
                    locations.forEach(location => {
                        let option = document.createElement('option');
                        option.value = location.id; // ID du lieu
                        option.textContent = location.name; // Nom du lieu
                        locationsContainer.appendChild(option);
                    });
                } else {
                    let noOption = document.createElement('option');
                    noOption.textContent = 'Aucun lieu trouvé.';
                    noOption.value = '';
                    locationsContainer.appendChild(noOption);
                }            }
        });
    </script>

{% endblock %}

